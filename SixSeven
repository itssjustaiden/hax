-- this is AI im learinng aimbot

local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera
local Mouse = LocalPlayer:GetMouse()
local TargetsFolder = workspace:WaitForChild("Targets")

local Settings = {
    Enabled = false,
    Smoothness = 8,
    FOV = 250,
    RayCheck = false,
}

---------------------------------------------------
-- target utils
---------------------------------------------------
local function getCandidates()
    local cands = {}
    for _,obj in ipairs(TargetsFolder:GetChildren()) do
        if obj:IsA("BasePart") then
            table.insert(cands, obj)
        elseif obj:IsA("Model") then
            -- grab primary part if set, else first basepart
            local part = obj.PrimaryPart or obj:FindFirstChildWhichIsA("BasePart")
            if part then
                table.insert(cands, part)
            end
        end
    end
    return cands
end

local function isVisible(part)
    if not Settings.RayCheck then return true end
    local origin = Camera.CFrame.Position
    local dir = (part.Position - origin)
    local params = RaycastParams.new()
    params.FilterDescendantsInstances = {LocalPlayer.Character}
    params.FilterType = Enum.RaycastFilterType.Blacklist
    local result = workspace:Raycast(origin, dir, params)
    return (not result) or result.Instance:IsDescendantOf(part)
end

local function chooseTarget(candidates)
    local best, bestDist
    local mx,my = Mouse.X, Mouse.Y
    for _,p in ipairs(candidates) do
        local screenPos, onScreen = Camera:WorldToViewportPoint(p.Position)
        if onScreen then
            local dx,dy = screenPos.X-mx, screenPos.Y-my
            local dist = math.sqrt(dx*dx+dy*dy)
            if (not bestDist or dist<bestDist) and dist <= Settings.FOV then
                if isVisible(p) then
                    best, bestDist = p, dist
                end
            end
        end
    end
    return best
end

local function aimAt(part, dt)
    local camPos = Camera.CFrame.Position
    local goal = CFrame.new(camPos, part.Position)
    local alpha = math.clamp(dt * Settings.Smoothness, 0, 1)
    Camera.CFrame = Camera.CFrame:Lerp(goal, alpha)
end

---------------------------------------------------
-- loop
---------------------------------------------------
RunService.RenderStepped:Connect(function(dt)
    if not Settings.Enabled then return end
    local target = chooseTarget(getCandidates())
    if target then
        aimAt(target, dt)
    end
end)

---------------------------------------------------
-- Rayfield UI
---------------------------------------------------
local Window = Rayfield:CreateWindow({
    Name = "Reflex Aimbot",
    LoadingTitle = "Reflex",
    LoadingSubtitle = "Balloon Targets",
})

local Tab = Window:CreateTab("Main")

local ToggleAimbot = Tab:CreateToggle({
    Name = "Enable Aimbot",
    CurrentValue = false,
    Callback = function(v)
        Settings.Enabled = v
    end,
})

local SliderSmooth = Tab:CreateSlider({
    Name = "Smoothness",
    Range = {1,30},
    Increment = 1,
    CurrentValue = Settings.Smoothness,
    Callback = function(v) Settings.Smoothness = v end,
})

local SliderFOV = Tab:CreateSlider({
    Name = "FOV (pixels)",
    Range = {50,800},
    Increment = 10,
    CurrentValue = Settings.FOV,
    Callback = function(v) Settings.FOV = v end,
})

local ToggleRay = Tab:CreateToggle({
    Name = "Raycast Visibility Check",
    CurrentValue = Settings.RayCheck,
    Callback = function(v) Settings.RayCheck = v end,
})
